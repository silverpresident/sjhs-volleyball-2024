@page "/"
@inherits StateComponentBase

<PageTitle>ST JAGO VOLLEYBALL RALLY</PageTitle>

<div class="tournament-dashboard">
    <header class="tournament-header">
        <h1>ST JAGO VOLLEYBALL RALLY</h1>
        <div class="tournament-info">
            <div class="refresh-info">
                Auto-refreshes every @(RefreshInterval) seconds
            </div>
        </div>
    </header>

    <div class="dashboard-grid">
        <div class="matches-section">
            <MatchList />
        </div>

        <div class="side-section">
            <div class="leaderboard-section">
                <Leaderboard />
            </div>

            <div class="announcements-section">
                <AnnouncementList />
            </div>

            <div class="updates-section">
                <UpdateStream />
            </div>
        </div>
    </div>
</div>

@code {
    [Inject]
    private RefreshSettings RefreshSettings { get; set; } = default!;

    private int RefreshInterval => RefreshSettings.Interval;
    private System.Threading.Timer? _refreshTimer;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await ExecuteAsync(async () => await AppState.LoadDataAsync());

        if (RefreshInterval > 0)
        {
            _refreshTimer = new System.Threading.Timer(async _ =>
            {
                await ExecuteAsync(async () =>
                {
                    await AppState.LoadDataAsync();
                    await InvokeAsync(StateHasChanged);
                });
            }, null, TimeSpan.Zero, TimeSpan.FromSeconds(RefreshInterval));
        }
    }

    public override void Dispose()
    {
        _refreshTimer?.Dispose();
        base.Dispose();
    }
}

<style>
.tournament-dashboard {
    max-width: 1600px;
    margin: 0 auto;
    padding: 1rem;
}

.tournament-header {
    text-align: center;
    margin-bottom: 2rem;
    padding: 1rem;
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    color: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.tournament-header h1 {
    margin: 0;
    font-size: 2rem;
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
}

.tournament-info {
    margin-top: 0.5rem;
    font-size: 0.875rem;
    opacity: 0.9;
}

.dashboard-grid {
    display: grid;
    gap: 2rem;
    grid-template-columns: 1fr;
}

.matches-section,
.side-section {
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.matches-section {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 1rem;
}

.side-section > div {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 1rem;
}

/* Responsive design */
@@media (min-width: 1024px) {
    .dashboard-grid {
        grid-template-columns: 3fr 2fr;
    }

    .tournament-header h1 {
        font-size: 2.5rem;
    }
}
</style>
